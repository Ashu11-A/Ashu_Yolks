name: Build for time

on:
  workflow_dispatch: 
  schedule:
    - cron: "0 0 * * 1"
jobs:
  prepare:
    name: Get all Dockers
    runs-on: ubuntu-latest
    outputs:
        paths: ${{ steps.paths.outputs.paths }}
    steps:
      - name: Clone repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          check-latest: true

      - name: Install deps
        run: npm ci
  
      - name: Run javascript code
        run: npm run dev -- --detect-change

      - uses: actions/github-script@v7
        name: List paths
        id: paths
        with:
          script: |
            const fs = require('fs/promises')

            const data = await fs.readFile('metadata.json', { encoding: 'utf-8' })
            const paths = JSON.parse(data)

            core.setOutput('paths', paths)
  build:
    name: ${{ toJson(matrix.data) }}
    runs-on: ubuntu-latest
    needs: prepare
    continue-on-error: true
    strategy:
      matrix:
        data: ${{ fromJson(needs.prepare.outputs.paths) }}
    steps:
      - name: Clone repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.data.path }}
          file: ${{ matrix.data.path }}/Dockerfile
          platforms: ${{ matrix.data.arch }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ghcr.io/ashu11-a/${{ matrix.data.type }}:${{ matrix.data.tag }}

  readme:
    name: Generate Readme.md
    runs-on: ubuntu-latest
    needs: build
    continue-on-error: true
    steps:
      - name: Clone repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          check-latest: true

      - name: Install deps
        run: npm ci

      - name: Run javascript code
        run: npm run dev -- --generate-readme ${{ github.run_id }}

      - name: Git Auto Commit
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
           commit_author: Author <41898282+github-actions[bot]@users.noreply.github.com>



  # clean:
  #   name: "Delete all useless docker images"
  #   runs-on: ubuntu-latest
  #   needs: prepare
  #   continue-on-error: true
  #   strategy:
  #     matrix:
  #       data: ${{ fromJson(needs.prepare.outputs.paths) }}
  #   steps:
  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v3.0.0
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Fetch multi-platform package version SHAs
  #       id: multi-arch-digests
  #       run: |
  #         package=$(docker manifest inspect ghcr.io/ashu11-a/${{ matrix.data.type }}:${{ matrix.data.tag }} | jq -r '.manifests.[] | .digest' | paste -s -d ' ' -)
  #         echo "multi-arch-digests=$package" >> $GITHUB_OUTPUT

  #     - uses: snok/container-retention-policy@v3.0.0
  #       with:
  #         account: Ashu11-A
  #         skip-shas: ${{ steps.multi-arch-digests.outputs.multi-arch-digests }}
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         image-names: ${{ matrix.data.type }}
  #         image-tags: ${{ matrix.data.tag }}  # target any image that has a tag starting with the word test or dev
  #         cut-off: 2w 3d
  #         dry-run: true
